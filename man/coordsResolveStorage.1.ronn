coordsResolveStorage(1) -- resolves references in a COORDS data storage.
============================================================================

## SYNOPSIS

`coordsResolveStorage` [-m|--no-multipolygons] [-r|--no-resolve] [-u|--no-updates] <storage directory>

## DESCRIPTION

The tool `coordsResolveStorage` resolves all references that are present in OSM data and need to be resolved for normal COORDS operations. This includes resolving way references to actual lat/lng coordinates, creating reverse indices (storing which node/way/relation is referred to by which way/relation) and assembling (and sanitizing) multipolygon geometry from multipolygon relations.

  * `-m`, `--no-multipolygons`:
    Omits the assembly of multipolygon geometry. Note that multipolygon assembly *is* necessary for a complete COORDS data storage. So the data storage will be incomplete when this option is used. This option mostly exists to defer multipolygon assembly to a more suitable time.

  * `-r`, `--no-resolve`:
    Omits all reference resolution steps. Note that a COORDS data storage is useless without reference resolution, so a COORDS data storage will not be usable unless `coordsResolveStorage` is run *without* this option at least once. This option mostly exists for when `coordsResolveStorage` has been run before (e.g. with the `-m` option), and thus all references have already been resolved.

  * `-u`, `--no-updates` :
    Omits the creation of all those data structures that are only necessary to support data storage updates via diff files, but are not necessary for normal operations. This mostly means not creating reverse indices for nodes and deleting the reverse indices for relations once they are no longer needed. The reverse index for ways, however, is created in any case, as it is required for tile creation. Using this option noticebly reduces the amount of used disk space and computation time, but makes the data storage impossible to update later on. 
    
    Note, that as of version 0.2.0 COORDS does not yet support updates. So using this option is the suggested and safe way of using coordsResolveStorage.

  * <storage directory>:
    The location of a COORDS data storage created by coordsCreateStorage(1). This data storage will be modified in the process.

## NOTES

## AUTHOR
Written by Robert Buchholz
    
## COPYRIGHT
Copyright 2014-2015, licensed under the GNU AFFERO GENERAL PUBLIC LICENSE (AGPL) version 3. <https://gnu.org/licenses/agpl.html>

